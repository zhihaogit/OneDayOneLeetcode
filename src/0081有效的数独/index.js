/**
 * @param {character[][]} board
 * @return {boolean}
 */
var isValidSudoku = function (board) {
  // rows，二维数组，记录每一行中数字出现的个数，第一层的索引是行号，第二层索引是单元格上数字的值（0 ~ 8表示），如果第二层的某个数值大于 1，即表示这一行上有重复的数字
  const rows = new Array(9).fill(0).map(() => new Array(9).fill(0));
  // columns，二维数组，记录每一列中数字出现的个数，第一层的索引是列号，第二层索引是单元格上数字的值（0 ~ 8表示），如果第二层的某个数值大于 1，即表示这一列上有重复的数字
  const columns = new Array(9).fill(0).map(() => new Array(9).fill(0));
  // boxes，三维数组，记录 3x3宫内中数字出现的个数，第一层的索引是行号 / 3，第二层索引是列号 / 3，第三层索引是单元格上的数字的值（0 ~ 8表示），如果第三层的某个数值大于 1，即表示这 3x3宫内上有重复的数字
  // (i / 3，j / 3)的坐标刚好表示一个 3x3的格子
  const boxes = new Array(3).fill(0).map(() => new Array(3).fill(0).map(() => new Array(9).fill(0)));
  for (let i = 0; i < 9; i++) {
    for (let j = 0; j < 9; j++) {
      const c = board[i][j];
      if (c !== '.') {
        // 将单元格上的数字从 1 ~ 9转为 0 ~ 8
        const index = c - 1;
        rows[i][index]++;
        columns[j][index]++;
        boxes[Math.floor(i / 3)][Math.floor(j / 3)][index]++;
        if (rows[i][index] > 1 || columns[j][index] > 1 || boxes[Math.floor(i / 3)][Math.floor(j / 3)][index] > 1) {
          return false;
        }
      }
    }
  }
  return true;
};

const param = [
  ["5", "3", ".", ".", "7", ".", ".", ".", "."],
  ["6", ".", ".", "1", "9", "5", ".", ".", "."],
  [".", "9", "8", ".", ".", ".", ".", "6", "."],
  ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
  ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
  ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
  [".", "6", ".", ".", ".", ".", "2", "8", "."],
  [".", ".", ".", "4", "1", "9", ".", ".", "5"],
  [".", ".", ".", ".", "8", ".", ".", "7", "9"]
];

const param1 = [
  ["8", "3", ".", ".", "7", ".", ".", ".", "."],
  ["6", ".", ".", "1", "9", "5", ".", ".", "."],
  [".", "9", "8", ".", ".", ".", ".", "6", "."],
  ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
  ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
  ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
  [".", "6", ".", ".", ".", ".", "2", "8", "."],
  [".", ".", ".", "4", "1", "9", ".", ".", "5"],
  [".", ".", ".", ".", "8", ".", ".", "7", "9"]
];

const res = isValidSudoku(param1);
console.log(res);
